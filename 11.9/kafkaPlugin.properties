# 以下的配置项，都是每个插件自己定义的，将会在init方法中进行传入，有插件自行进行插件的初始化操作。具体可见插件的init方法
basePropertiesKey = agent.kafka.metrics.type.
jmxServerName = kafka.Kafka
step = 30
# DISABLED,FORCE,AUTO
pluginActivateType = AUTO


################################################################################################
#				自定义的监控属性 配置
################################################################################################
# 服务器的监控参数配置(最多可配置1..100) 动态生效
#
# objectName : jmx中的ObjectName
# metrics : jmx中ObjectName对应的监控值
# valueExpress : "if(value == 0){newValue = 1}else{newValue = ''}"  对监控值进行转换,可选.支持js代码,原值为变量value,新值赋值给变量newValue
# alias : 别名 (可选),若指定则falcon显示平台将显示别名
# GAUGE : 数据采集项类型
# tag : 标签 (可选)
#
# 注:metrics和alias名称中,不要出现.字符。不知道什么原因,出现.字符,falcon计算的counter名出现""双引号
#
# 数据采集项类型只能配置 GAUGE(上传什么样的值，就原封不动的存储) 或 COUNTER(存储和展现的时候，会被计算为speed，即（当前值 - 上次值）/ 时间间隔)
# tags: 一组逗号分割的键值对, 对metric进一步描述和细化, 可以是空字符串. 比如idc=lg，比如service=xbox等，多个tag之间用逗号分割
agent.kafka.metrics.type.1.objectName= kafka.server:type=KafkaServer,name=BrokerState
agent.kafka.metrics.type.1.metrics = Value
agent.kafka.metrics.type.1.alias = BrokerState.Value
agent.kafka.metrics.type.1.counterType = GAUGE
agent.kafka.metrics.type.1.tag = ""

# ... 这里只示例一个，其他需要监控的JVM参数可自行配置，根据jconsole的mBean信息，此配置在SuitAgent运行期间可动态修改